import os
import replicate
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message

# üîê –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ç–æ–∫–µ–Ω—ã
REPLICATE_TOKEN = "—Ä–µ–ø–ª–∏–∫–µ–π—Ç_—Ç–æ–∫–µ–Ω"
TELEGRAM_TOKEN = "—Ç–≥_—Ç–æ–∫–µ–Ω"

os.environ["REPLICATE_API_TOKEN"] = REPLICATE_TOKEN

bot = Bot(token=TELEGRAM_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# üé® –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è
style_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üéé –ê–Ω–∏–º–µ"), KeyboardButton(text="üé® –†–µ–∞–ª–∏–∑–º")],
        [KeyboardButton(text="üß† –ü—Ä–æ–º—Ç –≤—Ä—É—á–Ω—É—é")]
    ],
    resize_keyboard=True
)

@dp.message(CommandStart())
async def start(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", reply_markup=style_kb)

# üì© –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞
@dp.message()
async def handle_message(message: Message):
    text = message.text.lower()

    if "–∞–Ω–∏–º–µ" in text:
        await message.answer("‚úçÔ∏è –í–≤–µ–¥–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∞–Ω–∏–º–µ):")
        dp.message.register(generate_image, style="anime")
    elif "—Ä–µ–∞–ª–∏–∑–º" in text:
        await message.answer("‚úçÔ∏è –í–≤–µ–¥–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Ä–µ–∞–ª–∏–∑–º):")
        dp.message.register(generate_image, style="realism")
    elif "–ø—Ä–æ–º—Ç" in text:
        await message.answer("‚úçÔ∏è –í–≤–µ–¥–∏ –ø—Ä–æ–º—Ç –Ω–∞–ø—Ä—è–º—É—é:")
        dp.message.register(generate_prompt)
    else:
        await message.answer("üòï –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.")

# üß† –ü—Ä–æ–º—Ç –Ω–∞–ø—Ä—è–º—É—é
async def generate_prompt(message: Message):
    await message.answer("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é...")
    output = replicate.run(
        "aitechtree/nsfw-novel-generation",
        input={"prompt": message.text}
    )
    await message.reply_photo(output[0])

# ü§ñ –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–º—Ç–∞
async def generate_image(message: Message, style: str):
    prompt = f"{style}, {message.text}"
    await message.answer("üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é...")
    output = replicate.run(
        "aitechtree/nsfw-novel-generation",
        input={"prompt": prompt}
    )
    await message.reply_photo(output[0])

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())